// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace Multi_Tracks_API.Models;

public partial class MultiTracksDBContext : DbContext
{
    public MultiTracksDBContext()
    {
    }

    public MultiTracksDBContext(DbContextOptions<MultiTracksDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Album> Albums { get; set; }

    public virtual DbSet<Artist> Artists { get; set; }

    public virtual DbSet<AssessmentStep> AssessmentSteps { get; set; }

    public virtual DbSet<Song> Songs { get; set; }

/*    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("Data Source=HP\\KARIM;Initial Catalog=MultiTracksDB;Integrated Security=True");*/

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        /*modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");*/

        modelBuilder.Entity<Album>(entity =>
        {
            entity.HasKey(e => e.albumID).HasName("PK__Album__75BF3EEFA11F7E22");

            entity.Property(e => e.dateCreation).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<Artist>(entity =>
        {
            entity.HasKey(e => e.artistID).HasName("PK__Artist__4F439367E16A5D66");

            entity.Property(e => e.dateCreation).HasDefaultValueSql("(getdate())");
        });

        modelBuilder.Entity<AssessmentStep>(entity =>
        {
            entity.HasKey(e => e.stepID).HasName("PK__Assessme__4E25C23DD49EA20C");
        });

        modelBuilder.Entity<Song>(entity =>
        {
            entity.HasKey(e => e.songID).HasName("PK__Song__0364D6AD59FACE63");

            entity.Property(e => e.dateCreation).HasDefaultValueSql("(getdate())");
        });

    /*    OnModelCreatingGeneratedProcedures(modelBuilder);*/
        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}